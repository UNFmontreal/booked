<?xml version="1.0"?>
<project name="booked" default="package">
    <property name="version" value="2.8.2"/>
    <property name="is.pre.release" value="false"/>
    <property name="packagename" value="booked-${version}"/>
    <property name="root.dir" value="../.."/>
    <property name="zipdirectory" value="${root.dir}/booked_archive/zip/${version}"/>
    <property name="archive_directory" value="${root.dir}/booked_archive/src/${version}"/>
    <property name="staging" value="${root.dir}/staging"/>
    <property name="stagingdir" value="${staging}/booked"/>
    <property name="demo.dir" value="${root.dir}/booked_archive/src/demo"/>
    <property name="phing.tasks.dir" value="c:/php/pear/phing/tasks/my"/>

    <available file="C:\wamp64\bin\mysql\mysql5.7.26" property="mysql.bin" value="C:\wamp64\bin\mysql\mysql5.7.26\bin"/>
    <available file="C:\wamp64\bin\mysql\mysql8.0.18" property="mysql.bin" value="C:\wamp64\bin\mysql\mysql8.0.18\bin"/>

    <property name="mysql.username" value="root"/>
    <property name="mysql.password" value="password"/>
    <property name="mysql.server" value="localhost"/>
    <property name="mysql.database" value="booked"/>
    <property name="sql.file.create.db" value="database_schema/create-db.sql"/>
    <property name="sql.file.create.schema" value="database_schema/create-schema.sql"/>
    <property name="sql.file.create.user" value="database_schema/create-user.sql"/>
    <property name="sql.file.data" value="database_schema/create-data.sql"/>
    <property name="sql.file.full" value="database_schema/full-install.sql"/>
    <property name="sql.file.test.data" value="database_schema/sample-data-utf8.sql"/>

    <target name="setup.db" description="setting up the latest version of the database">

        <if>
            <equals arg1="${mysql.password}" arg2=""/>
            <then>
                <input propertyName="mysql.password" defaultValue="" promptChar="?">mysql password</input>
            </then>
        </if>

        <phingcall target="baseline.db">
            <property name="mysql.password" value="${mysql.password}"/>
        </phingcall>

        <phingcall target="upgrade.db">
            <property name="mysql.password" value="${mysql.password}"/>
        </phingcall>
    </target>

    <target name="baseline.db" description="baseline db">

        <if>
            <equals arg1="${mysql.password}" arg2=""/>
            <then>
                <input propertyName="mysql.password" defaultValue="" promptChar="?">mysql password</input>
            </then>
        </if>

        <echo message="Using MySQL from ${mysql.bin}"/>
        <echo message="Create db file: ${sql.file.create.db}"/>
        <exec command="mysql --user=${mysql.username} --password=${mysql.password} --host=${mysql.server} mysql &lt; ${phing.dir}/${sql.file.create.db}"
              checkreturn="true"
              dir="${mysql.bin}"/>

        <echo message="Create schema file: ${sql.file.create.schema}"/>
        <exec command="${mysql.bin}\mysql --user=${mysql.username} --password=${mysql.password} --host=${mysql.server} ${mysql.database} &lt; ${phing.dir}/${sql.file.create.schema}"
              checkreturn="true"
              dir="${mysql.bin}"/>

        <echo message="Create user file: ${sql.file.create.user}"/>
        <exec command="${mysql.bin}\mysql --user=${mysql.username} --password=${mysql.password} --host=${mysql.server} ${mysql.database} &lt; ${phing.dir}/${sql.file.create.user}"
              checkreturn="true"
              dir="${mysql.bin}"/>

    </target>

    <target name="upgrade.db" depends="custom.tasks">

        <if>
            <equals arg1="${mysql.password}" arg2=""/>
            <then>
                <input propertyName="mysql.password" defaultValue="" promptChar="?">mysql password</input>
            </then>
        </if>

        <exec passthru="true" escape="false" command="php ${application.startdir}/phing-tasks/UpgradeDbTask.php
        ${mysql.username}
        ${mysql.password}
        ${mysql.server}
        ${mysql.database} ${application.startdir}/database_schema"/>

        <echo message="Application data file: ${sql.file.data}"/>
        <exec command="${mysql.bin}\mysql --user=${mysql.username} --password=${mysql.password} --host=${mysql.server} ${mysql.database} &lt; ${application.startdir}/${sql.file.data}"
              checkreturn="true"
              dir="${mysql.bin}"/>

        <echo message="Test data file: ${sql.file.test.data}"/>
        <exec command="mysql --user=${mysql.username} --password=${mysql.password} --host=${mysql.server} ${mysql.database} &lt; ${application.startdir}/${sql.file.test.data}"
              checkreturn="true"
              passthru="true"
              dir="${mysql.bin}"/>
    </target>

    <target name="package" description="packages all required files" depends="stage.files">

        <delete dir="${zipdirectory}" failonerror="false"/>
        <mkdir dir="${zipdirectory}"/>

        <tstamp/>

        <property name="zip.file.name" value="${zipdirectory}/${packagename}.zip"/>

        <zip destfile="${zip.file.name}">
            <fileset dir="${staging}">
                <include name="**/*"/>
            </fileset>
        </zip>

        <delete dir="${archive_directory}" failonerror="false"/>
        <mkdir dir="${archive_directory}"/>

        <copy todir="${archive_directory}" includeemptydirs="true">
            <fileset dir="${staging}">
                <include name="**/*"/>
            </fileset>
        </copy>

        <delete dir="${staging}" failonerror="false"/>
    </target>

    <target name="stage.files">
        <delete dir="${staging}" failonerror="false"/>
        <mkdir dir="${staging}"/>
        <mkdir dir="${stagingdir}"/>
        <copy todir="${stagingdir}" includeemptydirs="true">
            <fileset dir=".">
                <include name="**/*"/>
                <exclude name="**.psd"/>
                <exclude name="**.bak"/>
                <exclude name="*test*"/>
                <exclude name=".project"/>
                <exclude name="build.bat"/>
                <exclude name="build.xml"/>
                <exclude name="**/tests/**"/>
                <exclude name="**/docs/**"/>
                <exclude name="tpl_c/*.*"/>
                <exclude name=".git*/**"/>
                <exclude name=".idea"/>
                <exclude name=".idea/**"/>
                <exclude name=".settings/**"/>
                <exclude name="_excludes.txt"/>
                <exclude name="pdt_templates.xml"/>
                <exclude name="**/*.zip"/>
                <exclude name="**/*.jar"/>
                <exclude name="**/phing-tasks/**"/>
                <exclude name="*phing-tasks*"/>
                <exclude name="**/uploads/images/*"/>
                <exclude name="**/uploads/reservation/*"/>
                <exclude name="vendor/**"/>
                <exclude name="**/config.php"/>
                <exclude name="**/*.config.php"/>
                <exclude name="config/log4php.config.xml"/>
                <exclude name="*phpunit*"/>
                <exclude name="composer*"/>
                <include name="**/qrconfig.php"/>
                <include name="**/.htaccess"/>
            </fileset>
        </copy>

        <copy tofile="${stagingdir}/lib/external/phpqrcode/qrconfig.php" file="./lib/external/phpqrcode/qrconfig.php"/>

        <delete dir="${stagingdir}/.ebextensions" includeemptydirs="true"/>

        <phingcall target="combine.db.files">

        </phingcall>

        <append destFile="${stagingdir}/${sql.file.full}">
            <filelist dir="${stagingdir}/database_schema"
                      files="create-db.sql,create-user.sql,create-schema.sql,create-data.sql"/>
        </append>

    </target>

    <target name="combine.db.files" depends="custom.tasks">

        <exec passthru="true" escape="false" command="php ${application.startdir}/phing-tasks/CombineDbFilesTask.php
        ${stagingdir}/database_schema
        ${stagingdir}/${sql.file.create.schema}
        ${stagingdir}/${sql.file.data}"/>

    </target>

    <target name="custom.tasks">
        <copy todir="${phing.tasks.dir}">
            <fileset dir="phing-tasks">
                <include name="*.php"/>
            </fileset>
        </copy>
    </target>
</project>